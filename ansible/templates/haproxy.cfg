global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

	tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

# thanks https://limbenjamin.com/articles/running-https-ssh-vpn-on-port-443.html for example
frontend multiplex
        mode tcp
        bind 0.0.0.0:{{ ha_port }}
        tcp-request inspect-delay   30s
        tcp-request content accept  if  HTTP # WTF?
        # https://www.iana.org/assignments/socks-methods/socks-methods.xhtml lists at most 10 methods
        #use_backend     socks5 if  { payload(0,2) -m bin 0500 }
        #use_backend     socks5 if  { payload(0,2) -m bin 0501 }
        #use_backend     socks5 if  { payload(0,2) -m bin 0502 }
        #use_backend     socks5 if  { payload(0,2) -m bin 0503 }
        use_backend     sslbck if  { req.ssl_hello_type 1 }
        default_backend socks5

backend sslbck
        mode tcp
        server sslbck 127.0.0.1:443

backend socks5
        mode tcp
        server sslbck 127.0.0.1:{{ s5_port }}

frontend ssl_lo
        mode http
        bind 127.0.0.1:443 ssl crt /etc/ssl/private/ssl-cert-snakeoil_haproxy.pem
        default_backend nginx

backend nginx
        mode http
        server nginx 127.0.0.1:80
