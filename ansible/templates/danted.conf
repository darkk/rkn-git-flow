# $Id: sockd.conf,v 1.52.10.2.2.2 2017/01/31 07:16:25 karls Exp $
#
# A sample danted.conf
#
#
# The config file is divided into three parts;
#    1) server settings
#    2) rules
#    3) routes
#
# The recommended order is:
#   Server settings:
#               logoutput
#               internal
#               external
#               socksmethod
#               clientmethod
#               users
#               compatibility
#               extension
#               timeout
#               srchost
#
#  Rules:
#        client block/pass
#                from to
#                libwrap
#                log
#
#     block/pass
#                from to
#                socksmethod
#                command
#                libwrap
#                log
#                protocol
#                proxyprotocol
#
#  Routes:

logoutput: stderr

internal: 0.0.0.0 port = {{ s5_port }}
external: eth0

# list over acceptable authentication methods, order of preference.
# An authentication method not set here will never be selected.
#
# If the socksmethod field is not set in a rule, the global
# socksmethod is filled in for that rule.
#

# methods for socks-rules.
#socksmethod: username none #rfc931

# methods for client-rules.
clientmethod: none

{% if s5_auth %}
socksmethod: username
{% else %}
socksmethod: none
{% endif %}

#
# User identities, an important section.
#

# when doing something that can require privilege, it will use the
# userid:
{% if s5_auth %}
user.privileged: root
{% else %}
user.privileged: proxy
{% endif %}

# when running as usual, it will use the unprivileged userid of:
user.unprivileged: nobody

# If you are not using libwrap, no need for the below line, so leave
# it commented.
# If you compiled with libwrap support, what userid should it use
# when executing your libwrap commands?  "libwrap".
#user.libwrap: libwrap
user.libwrap: nobody


# allow any client connection
client pass {
    from: 0.0.0.0/0 port 1-65535 to: 0.0.0.0/0
    log: connect disconnect error
}

socks block {
    from: 0.0.0.0/0 to: lo
    log: connect error
}

socks block {
    from: 0.0.0.0/0 to: 127.0.0.0/8
    log: connect error
}

socks block {
    from: 0.0.0.0/0 to: 0.0.0.0/0
    command: bind
    log: error
}

{% for dest in dante_dest_whitelist %}
socks pass {
    from: 0.0.0.0/0 to: {{ dest }}
    log: connect disconnect error
    {% if s5_auth %}
    socksmethod: username
    {% else %}
    socksmethod: none
    {% endif %}
}
{% endfor %}

socks block {
    from: 0.0.0.0/0 to: 0.0.0.0/0
    log: error
}
